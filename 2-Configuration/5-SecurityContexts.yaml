
docker run --user=1001 ubuntu sleep 3600

docker run --cap-add MAC_ADMIN ubuntu

-----------
capabilities are only supported at the container level and NOT at the POD level.

-----------

    RunAsUser: This setting specifies the user ID that the container should run as. It can be set to a specific user ID or to "non-root" to ensure that the container runs as a non-privileged user.

    RunAsGroup: This setting specifies the group ID that the container should run as. Similar to RunAsUser, it can be set to a specific group ID or to "non-root".

    FSGroup: This setting specifies the group ID that owns the pod's volumes. This ensures that files created in the volumes are owned by the correct group.

    SELinuxOptions: This setting allows you to set SELinux context options for the container.

    Sysctls: This setting allows you to set Linux kernel parameters for the container.
-----------------------

Settings over the Pod level, will implement on all containers inside the Pod 
but settings over the Container are related only to particular Container.


-----
At Pod Level

apiVersion: v1
kind: Pod
metadata:
  name: web-pod
spec:
  securityContext:
    runAsUser: 1000
  containers:
    - name: ubuntu
      image: ubuntu
      command: ["sleep", "3600"]
      
--------
At container Level

apiVersion: v1
kind: Pod
metadata:
  name: web-pod
spec:
  containers:
  - name: ubuntu
    image: ubuntu
    command: ["sleep", "3600"]
    securityContext:
      runAsUser: 1000
      
------------

Note: Capabilities are only supported at the cotnainer level and not at the POD level

apiVersion: v1
kind: Pod
metadata:
  name: web-pod
spec:
  containers:
  - name: ubuntu
    image: ubuntu
    command: ["sleep", "3600"]
    securityContext:
      runAsUser: 1000
      capabilities:
        add: ["MAC_ADMIN"]


-------------------

Que: What is the user used to execute the sleep process within the ubuntu-sleeper pod?
And: kubectl exec ubuntu-sleeper -- whoami
